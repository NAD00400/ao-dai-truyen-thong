generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chi_tiet_don_hang {
  so_luong             Int
  gia_tien             Float
  ma_don_hang          String?        @db.Uuid
  ma_chi_tiet_don_hang String         @id @db.Uuid
  ma_san_pham          String?        @db.Uuid
  ma_so_do             String?        @db.Uuid
  so_do_dat_may        so_do_dat_may? @relation(fields: [ma_so_do], references: [ma_so_do], onDelete: NoAction, onUpdate: NoAction, map: "constraint_1")
}

model chi_tiet_gio_hang {
  ma_san_pham_dat_may  String
  so_luong             Int
  ma_chi_tiet_don_hang String  @id @db.Uuid
  ma_gio_hang          String? @db.Uuid
}

model danh_muc {
  ma_danh_muc      String             @id @db.Uuid
  danh_muc_slug    String
  url_image        String
  ten_danh_muc     String
  san_pham_dat_may san_pham_dat_may[]
}

model don_hang {
  ngay_dat_hang          DateTime    @default(now())
  trang_thai_don_hang    String
  tong_tien_don_hang     Float
  ngay_tao               DateTime    @default(now())
  ghi_chu                String?
  phuong_thuc_thanh_toan String
  thanh_toan_thanh_cong  Boolean
  ngay_cap_nhat          DateTime    @default(now())
  ma_khach_hang          String?     @db.Uuid
  ma_don_hang            String      @id @db.Uuid
  khach_hang             khach_hang? @relation(fields: [ma_khach_hang], references: [ma_khach_hang], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_khach_hang")
  giao_hang              giao_hang[]
}

model giao_hang {
  trang_thai        String
  phi_van_chuyen    String?
  dia_chi_lay_hang  String
  dia_chi_giao_hang String
  ghi_chu           String?
  ngay_giao_du_kien DateTime?
  ngay_giao_thuc_te DateTime?
  ma_hoa_don        String    @db.Uuid
  ma_van_don        String?
  ly_do_huy         String?
  ngay_tao          DateTime? @default(now()) @db.Timestamp(6)
  ngay_cap_nhat     DateTime? @default(now()) @db.Timestamp(6)
  ma_giao_hang      Int       @id @default(autoincrement())
  quan_nhan_hang    String?
  tinh_nhan_hang    String?
  phuong_nhan_hang  String?
  sdt_nhan_hang     String?
  tinh_giao_hang    String?
  phuong_giao_hang  String?
  quan_giao_hang    String?
  sdt_giao_hang     String?
  duong_giao_hang   String?
  don_hang          don_hang  @relation(fields: [ma_hoa_don], references: [ma_don_hang], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_don_hang")
}

model gio_hang {
  ma_gio_hang   String      @id(map: "ShoppingCart_pkey")
  customerId    String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  ma_khach_hang String?     @db.Uuid
  khach_hang    khach_hang? @relation(fields: [ma_khach_hang], references: [ma_khach_hang], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_khach_hang")
}

model hoa_don {
  invoice_number          String?
  tien_can_thanh_toan     Decimal?  @db.Decimal
  tien_da_thanh_toan      Decimal?  @db.Decimal
  thue                    Decimal?  @db.Decimal
  ngay_phat_hanh          DateTime? @db.Date
  ngay_het_han_thanh_toan DateTime? @db.Date
  ngay_cap_nhat           DateTime? @db.Date
  trang_thanh_toan        String?
  ma_hoa_don              String    @id @db.Uuid
  ma_don_hang             String?   @db.Uuid
}

model khach_hang {
  ma_khach_hang      String      @id(map: "khach_pkey") @db.Uuid
  ma_nguoi_dung      String?
  so_dien_thoai      String?
  dia_chi_khach_hang String?
  don_hang           don_hang[]
  gio_hang           gio_hang[]
  nguoi_dung         nguoi_dung? @relation(fields: [ma_nguoi_dung], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_nguoi_dung")
  @@index([ma_nguoi_dung], map: "index_1", type: Hash)
}

model khuyen_mai {
  ma_khuyen_mai      Int       @id @default(autoincrement())
  phan_tram_giam_gia String?
  ngay_ap_dung       DateTime? @db.Date
  ngay_het_han       DateTime? @db.Date
}

model lich_hen_khach_hang {
  ma_lich_hen   String    @id(map: "lic_pkey") @db.Uuid
  ma_khach_hang String?   @db.Uuid
  ngay_hen      DateTime? @db.Timestamp(6)
  ngay_tao      DateTime? @db.Timestamp(6)
  trang         String?
}

model nguoi_dung {
  ma_nguoi_dung     String       @id(map: "User_pkey")
  email_nguoi_dung  String       @unique(map: "User_email_key")
  ten_nguoi_dung    String?
  vai_tro           VaiTro       @default(KHACH_HANG)
  ngay_tao          DateTime     @default(now())
  ngay_cap_nhat     DateTime     @default(now())
  link_anh_dai_dien String?
  firebaseId        String       @unique(map: "User_firebaseId_key")
  khach_hang        khach_hang[]
}

model phu_lieu_may_mac {
  vai_chinh     String
  chi           String?
  nut           String?
  ngay_tao      DateTime @default(now())
  ma_phu_lieu   String   @id(map: "component_pkey") @db.Uuid
  day_keo       String?
  ngay_cap_nhat DateTime @default(now()) @db.Timestamp(6)
  Ren           String?
  vai_lot       String?
  hat_cuom      String?
  mech_dung     String?
}

model san_pham_dat_may {
  ten_san_pham        String
  ma_san_pham_dat_may String    @id(map: "san_pham_pkey") @db.Uuid
  mo_ta_san_pham      String?
  gia_tien            Float
  url_Image           String
  ngay_tao            DateTime  @default(now()) @db.Timestamp(6)
  ngay_cap_nhat       DateTime  @default(now()) @db.Timestamp(6)
  co_san              Boolean   @default(false)
  ma_danh_muc         String?   @db.Uuid
  ma_phu_lieu         String?   @db.Uuid
  danh_muc            danh_muc? @relation(fields: [ma_danh_muc], references: [ma_danh_muc], onDelete: NoAction, onUpdate: NoAction, map: "constraint_1")
}

model so_do_dat_may {
  vong_nguc               Float?
  vong_co                 Float?
  vong_eo                 Float?
  be_ngang_vai            Float?
  vong_hong               Float?
  chieu_dai_ao            Float?
  chieu_dai_tu_vai_toi_eo Float?
  chieu_dai_tay_ao        Float?
  vong_bap_tay            Float?
  vong_khuy_tay           Float?
  vong_co_tay             Float?
  chieu_dai_quan          Float?
  createdAt               DateTime            @default(now())
  vong_dui                Float?
  vong_dau_goi            String?
  vong_ong_quan           String?
  ma_so_do                String              @id @db.Uuid
  ma_khach_hang           String?             @db.Uuid
  chi_tiet_don_hang       chi_tiet_don_hang[]
}

model thanh_toan {
  id            String              @id(map: "Payment_pkey")
  paymentMethod LoaiThanhToan
  paymentStatus TrangThaiThanhToan
  transactionId String?             @unique(map: "Payment_transactionId_key")
  createdAt     DateTime            @default(now())
  paymentDate   DateTime            @default(now())
  paymentType   PhuongThucThanhToan
}

enum VaiTro {
  KHACH_HANG
  QUAN_TRI
}

enum TrangThaiLichHen {
  CHO_XAC_NHAN
  DA_XAC_NHAN
  DA_HUY
}

enum TrangThaiDonHang {
  CHO_XU_LY
  DA_THANH_TOAN
  DANG_GIAO
  HOAN_THANH
  DA_HUY
}

enum PhuongThucThanhToan {
  ZALOPAY
  THANH_TOAN_KHI_NHAN_HANG
  CHUYEN_KHOAN
}

enum TrangThaiThanhToan {
  CHO_THANH_TOAN
  DA_THANH_TOAN
  THAT_BAI
}

enum LoaiThanhToan {
  THANH_TOAN_HET
  DAT_COC
}

enum TrangThaiGiaoHang {
  CHO_XU_LY
  DANG_VAN_CHUYEN
  DA_GIAO
  THAT_BAI
}
